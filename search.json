[{"title":"前端基础-3","url":"http://minjin29.cn/archives/2018/05/23/前端基础-3/","content":"<p><font face=\"微软雅黑\"></font></p>\n<h3 id=\"1-null和undefined的区别？\"><a href=\"#1-null和undefined的区别？\" class=\"headerlink\" title=\"1. null和undefined的区别？\"></a><font color=\"green\">1. null和undefined的区别？</font></h3><p>null是一个表示”无”的对象，转为数值时为0<br>undefined是一个表示”无”的原始值，转为数值时为NaN</p>\n<p>当声明的变量还未被初始化时，变量的默认值为undefined<br>null用来表示尚未存在的对象，常用来表示函数企图返回一个不存在的对象</p>\n<p>undefined表示 “缺少值”，就是此处应该有一个值，但是还没有定义。典型用法是：</p>\n<ul>\n<li>变量被声明了，但没有赋值时，就等于 undefined</li>\n<li>调用函数时，应该提供的参数没有提供，该参数等于 undefined</li>\n<li>对象没有赋值的属性，该属性的值为 undefined</li>\n<li>函数没有返回值时，默认返回 undefined</li>\n</ul>\n<p>null表示“没有对象”，即该处不应该有值。典型用法是：</p>\n<ul>\n<li>作为函数的参数，表示该函数的参数不是对象</li>\n<li>作为对象原型链的终点</li>\n</ul>\n<h3 id=\"2-哪些操作会造成内存泄露？\"><a href=\"#2-哪些操作会造成内存泄露？\" class=\"headerlink\" title=\"2. 哪些操作会造成内存泄露？\"></a><font color=\"green\">2. 哪些操作会造成内存泄露？</font></h3><p>内存泄漏指任何对象在您不再拥有或需要它之后仍然存在。<br>垃圾回收器定期扫描对象，并计算引用了每个对象的其他对象的数量。如果一个对象的引用数量为 0（没有其他对象引用过该对象），或对该对象的惟一引用是循环的，那么该对象的内存即可回收。</p>\n<ul>\n<li>setTimeout 的第一个参数使用字符串而非函数的话，会引发内存泄漏。</li>\n<li>闭包</li>\n<li>控制台日志</li>\n<li>循环（在两个对象彼此引用且彼此保留时，就会产生一个循环）</li>\n</ul>\n<h3 id=\"3-js本地对象、内置对象和宿主对象？\"><a href=\"#3-js本地对象、内置对象和宿主对象？\" class=\"headerlink\" title=\"3. js本地对象、内置对象和宿主对象？\"></a><font color=\"green\">3. js本地对象、内置对象和宿主对象？</font></h3><p>该部分内容转自：<a href=\"https://www.cnblogs.com/luckyXcc/p/5892896.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/luckyXcc/p/5892896.html</a></p>\n<h5 id=\"本地对象：\"><a href=\"#本地对象：\" class=\"headerlink\" title=\"本地对象：\"></a>本地对象：</h5><p>ECMA-262 把本地对象（native object）定义为“独立于宿主环境的 ECMAScript 实现提供的对象”。如：<br>Object、Function、Array、String、Boolean、Number、Date、RegExp、Error、EvalError、RangeError、ReferenceError、SyntaxError、TypeError、URIError</p>\n<h5 id=\"内置对象\"><a href=\"#内置对象\" class=\"headerlink\" title=\"内置对象\"></a>内置对象</h5><p>ECMA-262 只定义了两个内置对象，即 Global 和 Math<br>Global对象是ECMAScript中最特别的对象，因为实际上它根本不存在，但大家要清楚，在ECMAScript中，不存在独立的函数，所有函数都必须是某个对象的方法。类似于isNaN()、parseInt()和parseFloat()方法等，看起来都是函数，而实际上，它们都是Global对象的方法。</p>\n<h5 id=\"宿主对象\"><a href=\"#宿主对象\" class=\"headerlink\" title=\"宿主对象\"></a>宿主对象</h5><p>window和document</p>\n<h3 id=\"4-性能优化的方法？\"><a href=\"#4-性能优化的方法？\" class=\"headerlink\" title=\"4. 性能优化的方法？\"></a><font color=\"green\">4. 性能优化的方法？</font></h3><ul>\n<li>减少http请求次数：CSS Sprites, JS、CSS 源码压缩、图片大小控制合适；网页 Gzip，CDN 托管，data 缓存 ，图片服务器</li>\n<li>前端模板 JS + 数据，减少由于HTML标签导致的带宽浪费，前端用变量保存 AJAX 请求结果，每次操作本地变量，不用请求，减少请求次数</li>\n<li>用 innerHTML 代替 DOM 操作，减少 DOM 操作次数，优化 javascript 性能</li>\n<li>当需要设置的样式很多时设置 className 而不是直接操作 style</li>\n<li>少用全局变量、缓存DOM节点查找的结果。减少 IO 读取操作</li>\n<li>避免使用 CSS Expression（css表达式)又称 Dynamic properties(动态属性)</li>\n<li>图片预加载，将样式表放在顶部，将脚本放在底部，加上时间戳</li>\n</ul>\n<h3 id=\"5-json和jsonp的区别？\"><a href=\"#5-json和jsonp的区别？\" class=\"headerlink\" title=\"5. json和jsonp的区别？\"></a>5. json和jsonp的区别？</h3><p>json不能解决跨域的问题，为解决这个问题，采用jsonp数据交互协议。众所周知，js文件的调用不受跨域与否的限制，因此如果想通过纯web端跨域访问数据，只能在远程服务器上设法<strong>将json数据封装进js格式的文件中</strong>，供客户端调用和进一步处理，这就是jsonp协议的原理。该协议的一个要点就是允许用户传递一个callback参数给服务端，然后服务端返回数据时会将这个callback参数作为函数名来包裹住JSON数据，这样客户端就可以随意定制自己的函数来自动处理返回数据了。</p>\n<h3 id=\"6-页面从输入url到页面加载完成，这个过程发生了什么？\"><a href=\"#6-页面从输入url到页面加载完成，这个过程发生了什么？\" class=\"headerlink\" title=\"6. 页面从输入url到页面加载完成，这个过程发生了什么？\"></a>6. 页面从输入url到页面加载完成，这个过程发生了什么？</h3><p>分为4个步骤：</p>\n<ol>\n<li>当发送一个 URL 请求时，不管这个 URL 是 Web 页面的 URL 还是 Web 页面上每个资源的 URL，浏览器都会开启一个线程来处理这个请求，同时在远程 DNS 服务器上启动一个 DNS 查询。这能使浏览器获得请求对应的 IP 地址。</li>\n<li>浏览器与远程 Web 服务器通过 TCP 三次握手协商来建立一个 TCP/IP 连接。该握手包括一个同步报文，一个同步-应答报文和一个应答报文，这三个报文在 浏览器和服务器之间传递。该握手首先由客户端尝试建立起通信，而后服务器应答并接受客户端的请求，最后由客户端发出该请求已经被接受的报文。</li>\n<li>一旦 TCP/IP 连接建立，浏览器会通过该连接向远程服务器发送 HTTP 的 GET 请求。远程服务器找到资源并使用 HTTP 响应返回该资源，值为 200 的 HTTP 响应状态表示一个正确的响应。</li>\n<li>此时，Web 服务器提供资源服务，客户端开始下载资源。</li>\n</ol>\n<p>请求返回后，便进入了我们关注的前端模块<br>简单来说，浏览器会解析 HTML 生成 DOM Tree，其次会根据 CSS 生成 CSS Rule Tree，而 javascript 又可以根据 DOM API 操作 DOM</p>\n<h3 id=\"7-前端的安全问题\"><a href=\"#7-前端的安全问题\" class=\"headerlink\" title=\"7. 前端的安全问题\"></a>7. 前端的安全问题</h3><ul>\n<li><strong>xss攻击</strong>。即跨站脚本攻击（Cross Site Scripting）。这类安全问题发生的本质原因在于，浏览器错误的将攻击者提供的用户输入数据当做JavaScript脚本给执行了。<br><strong>防御措施：</strong>输入过滤、进行前端输出编码、httpOnly Cookie</li>\n<li><p><strong>iframe有风险</strong>——有些时候我们的前端页面需要用到第三方提供的页面组件，通常会以iframe的方式引入。典型的例子是使用iframe在页面上添加第三方提供的广告、天气预报、社交分享插件等等。<br>iframe在给我们的页面带来更多丰富的内容和能力的同时，也带来了不少的安全隐患。因为iframe中的内容是由第三方来提供的，默认情况下他们不受我们的控制，他们可以在iframe中运行JavaScirpt脚本、Flash插件、弹出对话框等等，这可能会破坏前端用户体验。<br><strong>防御：</strong><br>在HTML5中，iframe有了一个叫做sandbox的安全属性，通过它可以对iframe的行为进行各种限制，充分实现“最小权限“原则。使用sandbox的最简单的方式就是只在iframe元素中添加上这个关键词就好，就像下面这样：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;iframe sandbox src=&quot;...&quot;&gt; ... &lt;/iframe&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>CSRF攻击</strong><br><a href=\"https://blog.csdn.net/ynd_sg/article/details/80427882\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/ynd_sg/article/details/80427882</a></p>\n</li>\n<li>文件上传漏洞<br>解决措施：(1)检查服务器是否判断了上传文件类型及后缀。 (2) 定义上传文件类型白名单，即只允许白名单里面类型的文件上传。 (3) 文件上传目录禁止执行脚本解析，避免攻击者进行二次攻击。 </li>\n</ul>\n<h3 id=\"8-什么是-“use-strict”-使用它的好处和坏处分别是什么？\"><a href=\"#8-什么是-“use-strict”-使用它的好处和坏处分别是什么？\" class=\"headerlink\" title=\"8.什么是 “use strict”; ? 使用它的好处和坏处分别是什么？\"></a>8.什么是 “use strict”; ? 使用它的好处和坏处分别是什么？</h3><p>ECMAscript 5添加了第二种运行模式：”严格模式”（strict mode）。顾名思义，这种模式使得Javascript在更严格的条件下运行。</p>\n<p>设立”严格模式”的目的，主要有以下几个：</p>\n<ul>\n<li>消除Javascript语法的一些不合理、不严谨之处，减少一些怪异行为;</li>\n<li>消除代码运行的一些不安全之处，保证代码运行的安全；</li>\n<li>提高编译器效率，增加运行速度；</li>\n<li>为未来新版本的Javascript做好铺垫。<br>注：经过测试 IE6,7,8,9 均不支持严格模式。</li>\n</ul>\n<p>缺点：<br>现在网站的 JS 都会进行压缩，一些文件用了严格模式，而另一些没有。这时这些本来是严格模式的文件，被 merge 后，这个串就到了文件的中间，不仅没有指示严格模式，反而在压缩后浪费了字节。</p>\n<h3 id=\"9-GET和POST的区别，何时使用POST？\"><a href=\"#9-GET和POST的区别，何时使用POST？\" class=\"headerlink\" title=\"9.GET和POST的区别，何时使用POST？\"></a>9.GET和POST的区别，何时使用POST？</h3><p>GET：一般用于信息获取，使用URL传递参数，对所发送信息的数量也有限制，一般在2000个字符<br>POST：一般用于修改服务器上的资源，对所发送的信息没有限制</p>\n<p>GET方式需要使用 Request.QueryString 来取得变量的值<br>POST方式通过 Request.Form 来获取变量的值<br>也就是说 Get 是通过地址栏来传值，而 Post 是通过提交表单来传值。</p>\n<p>在以下情况中，请使用 POST 请求：</p>\n<ul>\n<li>无法使用缓存文件（更新服务器上的文件或数据库）</li>\n<li>向服务器发送大量数据（POST 没有数据量限制）</li>\n<li>发送包含未知字符的用户输入时，POST 比 GET 更稳定也更可靠</li>\n</ul>\n<h3 id=\"10-通用的事件侦听器函数\"><a href=\"#10-通用的事件侦听器函数\" class=\"headerlink\" title=\"10. 通用的事件侦听器函数\"></a>10. 通用的事件侦听器函数</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// event(事件)工具集，来源：github.com/markyun</span><br><span class=\"line\">markyun.Event = &#123;</span><br><span class=\"line\">    // 页面加载完成后</span><br><span class=\"line\">    readyEvent : function(fn) &#123;</span><br><span class=\"line\">        if (fn==null) &#123;</span><br><span class=\"line\">            fn=document;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var oldonload = window.onload;</span><br><span class=\"line\">        if (typeof window.onload != &apos;function&apos;) &#123;</span><br><span class=\"line\">            window.onload = fn;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            window.onload = function() &#123;</span><br><span class=\"line\">                oldonload();</span><br><span class=\"line\">                fn();</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 视能力分别使用dom0||dom2||IE方式 来绑定事件</span><br><span class=\"line\">    // 参数： 操作的元素,事件名称 ,事件处理程序</span><br><span class=\"line\">    addEvent : function(element, type, handler) &#123;</span><br><span class=\"line\">        if (element.addEventListener) &#123;</span><br><span class=\"line\">            //事件类型、需要执行的函数、是否捕捉</span><br><span class=\"line\">            element.addEventListener(type, handler, false);</span><br><span class=\"line\">        &#125; else if (element.attachEvent) &#123;</span><br><span class=\"line\">            element.attachEvent(&apos;on&apos; + type, function() &#123;</span><br><span class=\"line\">                handler.call(element);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            element[&apos;on&apos; + type] = handler;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 移除事件</span><br><span class=\"line\">    removeEvent : function(element, type, handler) &#123;</span><br><span class=\"line\">        if (element.removeEnentListener) &#123;</span><br><span class=\"line\">            element.removeEnentListener(type, handler, false);</span><br><span class=\"line\">        &#125; else if (element.detachEvent) &#123;</span><br><span class=\"line\">            element.detachEvent(&apos;on&apos; + type, handler);</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            element[&apos;on&apos; + type] = null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;, </span><br><span class=\"line\">    // 阻止事件 (主要是事件冒泡，因为IE不支持事件捕获)</span><br><span class=\"line\">    stopPropagation : function(ev) &#123;</span><br><span class=\"line\">        if (ev.stopPropagation) &#123;</span><br><span class=\"line\">            ev.stopPropagation();</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            ev.cancelBubble = true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 取消事件的默认行为</span><br><span class=\"line\">    preventDefault : function(event) &#123;</span><br><span class=\"line\">        if (event.preventDefault) &#123;</span><br><span class=\"line\">            event.preventDefault();</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            event.returnValue = false;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 获取事件目标</span><br><span class=\"line\">    getTarget : function(event) &#123;</span><br><span class=\"line\">        return event.target || event.srcElement;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 获取event对象的引用，取到事件的所有信息，确保随时能使用event；</span><br><span class=\"line\">    getEvent : function(e) &#123;</span><br><span class=\"line\">        var ev = e || window.event;</span><br><span class=\"line\">        if (!ev) &#123;</span><br><span class=\"line\">            var c = this.getEvent.caller;</span><br><span class=\"line\">            while (c) &#123;</span><br><span class=\"line\">                ev = c.arguments[0];</span><br><span class=\"line\">                if (ev &amp;&amp; Event == ev.constructor) &#123;</span><br><span class=\"line\">                    break;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                c = c.caller;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return ev;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":[],"tags":[]},{"title":"前端基础-2","url":"http://minjin29.cn/archives/2018/05/23/前端基础-2/","content":"<p><font face=\"微软雅黑\"></font></p>\n<h3 id=\"1-css基础\"><a href=\"#1-css基础\" class=\"headerlink\" title=\"1. css基础\"></a><font color=\"green\">1. css基础</font></h3><h5 id=\"1-css可继承的样式：\"><a href=\"#1-css可继承的样式：\" class=\"headerlink\" title=\"1) css可继承的样式：\"></a>1) css可继承的样式：</h5><p>font-size、font-family、color、text-indent（都是关于文本字体设置）</p>\n<h5 id=\"2-css不可继承的样式：\"><a href=\"#2-css不可继承的样式：\" class=\"headerlink\" title=\"2)css不可继承的样式：\"></a>2)css不可继承的样式：</h5><p>border、width、height、padding、margin</p>\n<h5 id=\"3）优先级算法：\"><a href=\"#3）优先级算法：\" class=\"headerlink\" title=\"3）优先级算法：\"></a>3）优先级算法：</h5><ul>\n<li>优先级就近原则，同权重情况下样式定义最近者为准;</li>\n<li>载入样式以最后载入的定位为准;</li>\n<li>!important &gt;  id &gt; class &gt; tag  </li>\n<li>important 比 内联优先级高，但内联比 id 要高<h5 id=\"4）css3新特性\"><a href=\"#4）css3新特性\" class=\"headerlink\" title=\"4）css3新特性\"></a>4）css3新特性</h5>多引用自：<a href=\"https://www.nowcoder.com/ta/front-end-interview\" target=\"_blank\" rel=\"noopener\">https://www.nowcoder.com/ta/front-end-interview</a></li>\n<li>CSS3实现圆角（border-radius），阴影（box-shadow），</li>\n<li>对文字加特效（text-shadow、），线性渐变（gradient），旋转（transform）</li>\n<li>transform:rotate(9deg) scale(0.85,0.90) translate(0px,-30px) skew(-9deg,0deg);// 旋转,缩放,定位,倾斜</li>\n<li>增加了更多的CSS选择器  多背景 rgba</li>\n<li>在CSS3中唯一引入的伪类是 ::selection.</li>\n<li>媒体查询，多栏布局</li>\n<li>border-image<h5 id=\"5）初始化样式\"><a href=\"#5）初始化样式\" class=\"headerlink\" title=\"5）初始化样式\"></a>5）初始化样式</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,h6,pre,code,form,fieldset,legend,input,textarea,p,blockquote,th,td</span><br><span class=\"line\">&#123;margin:0;padding:0&#125;table&#123;border-collapse:collapse;border-spacing:0&#125;fieldset,img&#123;border:0&#125;</span><br><span class=\"line\">address,caption,cite,code,dfn,em,strong,th,var&#123;font-style:normal;font-weight:normal&#125;ol,ul&#123;list-style:none&#125;</span><br><span class=\"line\">caption,th&#123;text-align:left&#125;h1,h2,h3,h4,h5,h6&#123;font-size:100%;font-weight:normal&#125;q:before,q:after&#123;content:&apos;&apos;&#125;</span><br><span class=\"line\">abbr,acronym&#123;border:0;font-variant:normal&#125;sup&#123;vertical-align:text-top&#125;sub&#123;vertical-align:text-bottom&#125;</span><br><span class=\"line\">input,textarea,select&#123;font-family:inherit;font-size:inherit;font-weight:inherit;*font-size:100%&#125;legend&#123;color:#000&#125;</span><br><span class=\"line\">#yui3-css-stamp.css-reset&#123;display:none&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>或者淘宝样式初始化：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">body, h1, h2, h3, h4, h5, h6, hr, p, blockquote, dl, dt, dd, ul, ol, li, pre, form, fieldset, legend, button, input, textarea, th, td &#123; margin:0; padding:0; &#125;</span><br><span class=\"line\">body, button, input, select, textarea &#123; font:12px/1.5tahoma, arial, \\5b8b\\4f53; &#125;</span><br><span class=\"line\">h1, h2, h3, h4, h5, h6&#123; font-size:100%; &#125;</span><br><span class=\"line\">address, cite, dfn, em, var &#123; font-style:normal; &#125;</span><br><span class=\"line\">code, kbd, pre, samp &#123; font-family:couriernew, courier, monospace; &#125;</span><br><span class=\"line\">small&#123; font-size:12px; &#125;</span><br><span class=\"line\">ul, ol &#123; list-style:none; &#125;</span><br><span class=\"line\">a &#123; text-decoration:none; &#125;</span><br><span class=\"line\">a:hover &#123; text-decoration:underline; &#125;</span><br><span class=\"line\">sup &#123; vertical-align:text-top; &#125;</span><br><span class=\"line\">sub&#123; vertical-align:text-bottom; &#125;</span><br><span class=\"line\">legend &#123; color:#000; &#125;</span><br><span class=\"line\">fieldset, img &#123; border:0; &#125;</span><br><span class=\"line\">button, input, select, textarea &#123; font-size:100%; &#125;</span><br><span class=\"line\">table &#123; border-collapse:collapse; border-spacing:0; &#125;</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">### &lt;font color=&quot;green&quot;&gt;2. html语义化&lt;/font&gt;</span><br><span class=\"line\">**意义：**</span><br><span class=\"line\">（1）、为了在没有css代码时，也能呈现很好的内容结构，代码结构，以至于达到没有编程基础的非技术人员，也能看懂一二。（其实，就是为了不穿CSS外衣，裸奔依然好看）。</span><br><span class=\"line\">（2）、提高用户体验，比如：title，alt用于解释名词和图片信息。</span><br><span class=\"line\">（3）、利于SEO，语义化能和搜索引擎建立良好的联系，有利于爬虫抓取更多的有效信息。爬虫依赖于标签来确定上下文和各个关键字的权重。</span><br><span class=\"line\">（4）、方便其他设备解析（如屏幕阅读器、盲人阅读器、移动设备）以语义的方式来渲染网页。</span><br><span class=\"line\">（5）、便于团队开发和维护，语义化更具可读性，如果遵循W3C标准的团队都遵循这个标准，可以减少差异化，利于规范化。</span><br><span class=\"line\">**怎么做：**</span><br><span class=\"line\">减少没有语义的标签，如div、span、纯样式标签（b、font、u）</span><br><span class=\"line\"></span><br><span class=\"line\">### &lt;font color=&quot;green&quot;&gt;3. html和xhtml的区别&lt;/font&gt;</span><br><span class=\"line\">- XHTML 元素必须被正确地嵌套。</span><br><span class=\"line\">- XHTML 元素必须被关闭。</span><br><span class=\"line\">- 标签名必须用小写字母。</span><br><span class=\"line\">- XHTML 文档必须拥有根元素。</span><br><span class=\"line\"></span><br><span class=\"line\">### &lt;font color=&quot;green&quot;&gt;4. html常见兼容性问题&lt;/font&gt;</span><br><span class=\"line\">1. png24位的图片在iE6浏览器上出现背景</span><br><span class=\"line\">解决方案：做成PNG8，也可以引用一段脚本处理.</span><br><span class=\"line\"></span><br><span class=\"line\">2. 浏览器默认的margin和padding不同</span><br><span class=\"line\">解决方案：加一个全局的 *&#123;margin:0;padding:0;&#125; 来统一。</span><br><span class=\"line\"></span><br><span class=\"line\">3. IE6双边距bug：在IE6下，如果对元素设置了浮动，同时又设置了margin-left或margin-right，margin值会加倍。</span><br><span class=\"line\"></span><br><span class=\"line\">4.</span><br></pre></td></tr></table></figure></p>\n<p>#box{ float:left; width:10px; margin:0 0 0 10px;}<br><code>`</code><br>这种情况之下IE会产生20px的距离<br>解决方案：在float的标签样式控制中加入 _display:inline; 将其转化为行内属性。( _ 这个符号只有ie6会识别)</p>\n<ol start=\"5\">\n<li><p>渐进识别的方式，从总体中逐渐排除局部。<br>首先，巧妙的使用“\\9”这一标记，将IE游览器从所有情况中分离出来。<br>接着，再次使用 “+” 将IE8和IE7、IE6分离开来，这样IE8已经独立识别。<br>.bb{<br> background-color:#f1ee18; /<em>所有识别</em>/<br> .background-color:#00deff\\9; /<em>IE6、7、8识别</em>/<br> +background-color:#a200ff; /<em>IE6、7识别</em>/<br> _background-color:#1e0bd1; /<em>IE6识别</em>/<br>} </p>\n</li>\n<li><p>IE下，可以使用获取常规属性的方法来获取自定义属性，也可以使用 getAttribute() 获取自定义属性；Firefox下,只能使用getAttribute()获取自定义属性<br>解决方法：统一通过getAttribute()获取自定义属性</p>\n</li>\n<li><p>IE下，event对象有 x、y 属性，但是没有 pageX、pageY属性; Firefox下，event对象有 pageX、pageY 属性，但是没有 x、y 属性<br>解决方法：（条件注释）缺点是在IE浏览器下可能会增加额外的HTTP请求数。</p>\n</li>\n<li><p>Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示<br>解决方法：可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决</p>\n</li>\n<li><p>超链接访问过后 hover 样式就不出现了，被点击访问过的超链接样式不在具有 hover 和 active 了<br>解决方法：改变CSS属性的排列顺序 L-V-H-A</p>\n</li>\n</ol>\n<ul>\n<li>a:link {}</li>\n<li>a:visited {}</li>\n<li>a:hover {}</li>\n<li>a:active {}</li>\n</ul>\n<p>10.怪异模式问题：漏写 DTD 声明，Firefox 仍然会按照标准模式来解析网页，但在 IE 中会触发怪异模式。为避免怪异模式给我们带来不必要的麻烦，最好养成书写 DTD 声明的好习惯。现在可以使用<a href=\"http://www.w3.org/TR/html5/single-page.html\" target=\"_blank\" rel=\"noopener\">html5</a> 推荐的写法：&lt;!DOCTYPE html&gt;</p>\n<p>11.上下margin重合问题：ie和ff都存在，相邻的两个div的margin-left和margin-right不会重合，但是margin-top和margin-bottom却会发生重合。<br>解决方法：养成良好的代码编写习惯，同时采用margin-top或者同时采用margin-bottom。</p>\n<p>12.ie6对png图片格式支持不好<br>解决方案：引用一段脚本处理</p>\n<h3 id=\"5-html5介绍\"><a href=\"#5-html5介绍\" class=\"headerlink\" title=\"5. html5介绍\"></a><font color=\"green\">5. html5介绍</font></h3><p>HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。</p>\n<ol>\n<li>拖拽释放(Drag and drop) API </li>\n<li>语义化更好的内容标签（header,nav,footer,aside,article,section）</li>\n<li>音频、视频API(audio,video)</li>\n<li>画布(Canvas) API</li>\n<li>地理(Geolocation) API</li>\n<li>本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失；</li>\n<li>sessionStorage 的数据在浏览器关闭后自动删除</li>\n<li>表单控件，calendar、date、time、email、url、search  </li>\n<li>新的技术webworker, websocket, Geolocation</li>\n</ol>\n<p>移除的元素：</p>\n<ol>\n<li>纯表现的元素：basefont，big，center，font, s，strike，tt，u；</li>\n<li>对可用性产生负面影响的元素：frame，frameset，noframes；</li>\n</ol>\n<hr>\n","categories":[],"tags":[]},{"title":"前端基础-1","url":"http://minjin29.cn/archives/2018/05/21/前端基础/","content":"<p><font face=\"微软雅黑\"></font></p>\n<h3 id=\"1-stopPropagation和stopImmediatePropagaion的区别\"><a href=\"#1-stopPropagation和stopImmediatePropagaion的区别\" class=\"headerlink\" title=\"1. stopPropagation和stopImmediatePropagaion的区别\"></a>1. stopPropagation和stopImmediatePropagaion的区别</h3><p>两者都能阻止事件流冒泡，但后者会让当前对象的后面的事件监听都无法执行<br><strong>补充：</strong></p>\n<ul>\n<li>DOM中的事件对象：（符合W3C标准）<br> preventDefault()        取消事件默认行为<br> stopImmediatePropagation() 取消事件冒泡同时阻止当前节点上的事件处理程序被调用。<br> stopPropagation()      取消事件冒泡对当前节点无影响。</li>\n<li>IE中的事件对象：<br> cancelBubble()          取消事件冒泡<br> returnValue()             取消事件默认行为</li>\n</ul>\n<h3 id=\"2-盒子模型\"><a href=\"#2-盒子模型\" class=\"headerlink\" title=\"2. 盒子模型\"></a>2. 盒子模型</h3><ul>\n<li>盒子模型包括margin、border、padding、content，盒子总宽度为：<br>margin+border+padding+width<br>其中：</li>\n<li>标准盒子模型content不包括任何东西</li>\n<li>IE的盒子模型content包括border和padding</li>\n</ul>\n<h3 id=\"3-Request-Headers和Response-Headers\"><a href=\"#3-Request-Headers和Response-Headers\" class=\"headerlink\" title=\"3. Request Headers和Response Headers\"></a>3. Request Headers和Response Headers</h3><p><strong>请求：</strong><br>Accept：告诉服务器，客户机支持的数据类型；<br>Accept-Encoding：告诉服务器客户机支持的数据压缩格式；<br>cache-control：缓存控制：<br>    1）no-cache：强制每次请求直接发送给源服务器，不经过本地缓存校验；<br>    2）max-age&gt;0 直接从浏览器缓存中提取；<br>    3）max-age&lt;=0 向server发送http请求，该资源是否已修改，有的话返回200，没有返回304<br><strong>响应：</strong><br>Content-Encoding：服务器告诉浏览器数据压缩格式<br>Content-length：回送数据长度<br>Content-type：回送数据类型</p>\n<h3 id=\"4-http状态码：\"><a href=\"#4-http状态码：\" class=\"headerlink\" title=\"4. http状态码：\"></a>4. http状态码：</h3><p>该内容源自：<a href=\"https://blog.csdn.net/dufufd/article/details/53112184\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/dufufd/article/details/53112184</a><br><strong>2开头 （请求成功）</strong>表示成功处理了请求的状态代码。</p>\n<p>200   （成功）  服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。<br>201   （已创建）  请求成功并且服务器创建了新的资源。<br>202   （已接受）  服务器已接受请求，但尚未处理。<br>203   （非授权信息）  服务器已成功处理了请求，但返回的信息可能来自另一来源。<br>204   （无内容）  服务器成功处理了请求，但没有返回任何内容。<br>205   （重置内容） 服务器成功处理了请求，但没有返回任何内容。<br>206   （部分内容）  服务器成功处理了部分 GET 请求。</p>\n<p><strong>3开头 （请求被重定向）</strong>表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。</p>\n<p>300   （多种选择）  针对请求，服务器可执行多种操作。 服务器可根据请求者 (user agent) 选择一项操作，或提供操作列表供请求者选择。<br>301   （永久移动）  请求的网页已永久移动到新位置。 服务器返回此响应（对 GET 或 HEAD 请求的响应）时，会自动将请求者转到新位置。<br>302   （临时移动）  服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。<br>303   （查看其他位置） 请求者应当对不同的位置使用单独的 GET 请求来检索响应时，服务器返回此代码。<br>304   （未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。<br>305   （使用代理） 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。<br>307   （临时重定向）  服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。</p>\n<p><strong>4开头 （请求错误）</strong>这些状态代码表示请求可能出错，妨碍了服务器的处理。</p>\n<p>400   （错误请求） 服务器不理解请求的语法。<br>401   （未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。<br>403   （禁止） 服务器拒绝请求。<br>404   （未找到） 服务器找不到请求的网页。<br>405   （方法禁用） 禁用请求中指定的方法。 </p>\n<p><strong>5开头（服务器错误）</strong>这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</p>\n<p>500   （服务器内部错误）  服务器遇到错误，无法完成请求。<br>501   （尚未实施） 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。<br>502   （错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。<br>503   （服务不可用） 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。<br>504   （网关超时）  服务器作为网关或代理，但是没有及时从上游服务器收到请求。<br>505   （HTTP 版本不受支持） 服务器不支持请求中所用的 HTTP 协议版本。</p>\n<p>另话：switch使用恒等于===判断里面的参数，所有new String(“A”)!==”A”.<br>switch uses === internally and new String(x) !== x;</p>\n<p>String(x) does not create an object but does return a string, i.e. typeof String(1) === “string”<br>所以String(“A”)===”A”</p>\n<p>parseInt(string,radix):第二个参数可选，表示String是几进制的数</p>\n<p>Array的一些方法特性：<br>Array.prototype.filter is not invoked for the missing elements.</p>\n<p>map is only invoked for elements of the Array which have been initialized.</p>\n<h3 id=\"Array-prototype-gt\"><a href=\"#Array-prototype-gt\" class=\"headerlink\" title=\"Array.prototype=&gt;[]\"></a><strong>Array.prototype=&gt;[]</strong></h3><h3 id=\"数字转字符：3-toString-gt-’3’、var-a-3-a-toString-gt-’3’\"><a href=\"#数字转字符：3-toString-gt-’3’、var-a-3-a-toString-gt-’3’\" class=\"headerlink\" title=\"数字转字符：3..toString()=&gt;’3’、var a=3;a.toString()=&gt;’3’\"></a>数字转字符：3..toString()=&gt;’3’、var a=3;a.toString()=&gt;’3’</h3><h3 id=\"var-x-y-1-gt-y是全局变量\"><a href=\"#var-x-y-1-gt-y是全局变量\" class=\"headerlink\" title=\"{var x=y=1;}=&gt;y是全局变量\"></a>{var x=y=1;}=&gt;y是全局变量</h3><h3 id=\"Function的实例的length放回参数的个数\"><a href=\"#Function的实例的length放回参数的个数\" class=\"headerlink\" title=\"Function的实例的length放回参数的个数\"></a>Function的实例的length放回参数的个数</h3>","categories":[],"tags":[]},{"title":"IIS配置php运行环境","url":"http://minjin29.cn/archives/2018/04/29/IIS-php/","content":"<h2 id=\"首先需要安装配置IIS\"><a href=\"#首先需要安装配置IIS\" class=\"headerlink\" title=\"首先需要安装配置IIS\"></a><font color=\"blue\">首先需要安装配置IIS</font></h2><p><strong>一、安装IIS8.5</strong><br><img src=\"/2018/04/29/IIS-php/2783.jpg\" title=\"很遗憾，不见了\"><br>下一步<br><img src=\"/2018/04/29/IIS-php/2784.jpg\" title=\"很遗憾，不见了\"><br><img src=\"/2018/04/29/IIS-php/2785.jpg\" title=\"很遗憾，不见了\"><br>选择：基于角色或基于功能的安装</p>\n<p>下一步<br><img src=\"/2018/04/29/IIS-php/2786.jpg\" title=\"很遗憾，不见了\"><br>选择：从服务器池中选择服务器</p>\n<p>下一步<br><img src=\"/2018/04/29/IIS-php/2787.jpg\" title=\"很遗憾，不见了\"><br>选择：Web服务器（IIS）</p>\n<img src=\"/2018/04/29/IIS-php/2788.jpg\" title=\"很遗憾，不见了\">\n<img src=\"/2018/04/29/IIS-php/2795.jpg\" title=\"很遗憾，不见了\">\n<img src=\"/2018/04/29/IIS-php/2796.jpg\" title=\"很遗憾，不见了\">\n<p>确保CGI被选中，其他的角色服务根据需要选择，如果不知道如何选择，建议选择全部功能。</p>\n<img src=\"/2018/04/29/IIS-php/2797.jpg\" title=\"很遗憾，不见了\">\n<img src=\"/2018/04/29/IIS-php/2798.jpg\" title=\"很遗憾，不见了\">\n\n<p>点开始按钮，打开IE浏览器，输入<a href=\"http://127.0.0.1/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1/</a><br>会看到下面的界面<br><img src=\"/2018/04/29/IIS-php/2800.jpg\" title=\"很遗憾，不见了\"></p>\n<p>IIS8.5已经安装完成。</p>\n<h2 id=\"安装一些必要的文件\"><a href=\"#安装一些必要的文件\" class=\"headerlink\" title=\"安装一些必要的文件\"></a><font color=\"blue\">安装一些必要的文件</font></h2><p>Visual C++ Redistributable for Visual Studio 2012 Update 4(x64)下载地址（安装PHP需要此插件）：</p>\n<p><a href=\"http://download.microsoft.com/download/9/C/D/9CD480DC-0301-41B0-AAAB-FE9AC1F60237/VSU4/vcredist_x64.exe\" target=\"_blank\" rel=\"noopener\">http://download.microsoft.com/download/9/C/D/9CD480DC-0301-41B0-AAAB-FE9AC1F60237/VSU4/vcredist_x64.exe</a></p>\n<p>Visual C++ Redistributable for Visual Studio 2012 Update 4(x86)下载地址（安装PHP需要此插件）：</p>\n<p><a href=\"http://download.microsoft.com/download/9/C/D/9CD480DC-0301-41B0-AAAB-FE9AC1F60237/VSU4/vcredist_x86.exe\" target=\"_blank\" rel=\"noopener\">http://download.microsoft.com/download/9/C/D/9CD480DC-0301-41B0-AAAB-FE9AC1F60237/VSU4/vcredist_x86.exe</a><br><img src=\"/2018/04/29/IIS-php/2801.jpg\" title=\"很遗憾，不见了\"></p>\n<p><strong>3、安装php官网的文件包</strong></p>\n<p>解压zip文件</p>\n<p>重命名文件夹为php，把php文件夹拷贝到C盘根目录</p>\n<p>打开C:\\php</p>\n<p>复制php.ini-production为php.ini</p>\n<p>用记事本打开php.ini</p>\n<p>做如下修改：</p>\n<p>extension_dir = “C:\\php\\ext” #设置php模块路径</p>\n<p>date.timezone = PRC #设置时区为中国时区</p>\n<p>register_globals = On #开启GET数据调用</p>\n<p>short_open_tag = On #php支持短标签</p>\n<p>cgi.force_redirect = 0 #开启以CGI方式运行php</p>\n<p>fastcgi.impersonate = 1;</p>\n<p>cgi.rfc2616_headers = 1</p>\n<p>以下php扩展模块，根据需要选择开启，取消前面的分号为开始相应扩展模块</p>\n<p>extension=php_curl.dll</p>\n<p>extension=php_gd2.dll</p>\n<p>extension=php_mbstring.dll</p>\n<p>extension=php_exif.dll</p>\n<p>extension=php_mysql.dll</p>\n<p>extension=php_mysqli.dll</p>\n<p>extension=php_sockets.dll</p>\n<p>extension=php_xmlrpc.dll</p>\n<p>extension=php_pdo_mysql.dll</p>\n<p>系统运维 <a href=\"http://www.osyunwei.com\" target=\"_blank\" rel=\"noopener\">www.osyunwei.com</a> 温馨提醒：qihang01原创内容©版权所有,转载请注明出处及原文链接</p>\n<p>最后，保存退出</p>\n<p><strong>4、配置IIS支持PHP</strong><br><img src=\"/2018/04/29/IIS-php/2813.jpg\" title=\"很遗憾，不见了\"></p>\n<p>打开：控制面板-系统和安全-管理工具-Internet Information Services(IIS)管理器<br><img src=\"/2018/04/29/IIS-php/2814.jpg\" title=\"很遗憾，不见了\"></p>\n<p>双击左边“起始页”下面的计算机名称</p>\n<p>找到中间的IIS部分，打开“处理程序映射”<br><img src=\"/2018/04/29/IIS-php/2815.jpg\" title=\"很遗憾，不见了\"></p>\n<p>点右边的“添加模块映射”</p>\n<img src=\"/2018/04/29/IIS-php/2818.jpg\" title=\"很遗憾，不见了\">\n<p>请求路径：*.php</p>\n<p>模块：FastCgiModule</p>\n<p>可执行文件（可选）：C:\\php\\php-cgi.exe</p>\n<p>名称：FastCGI</p>\n<p>最后，确定</p>\n<p>点“是”</p>\n<p>双击左边“起始页”下面的计算机名称</p>\n<p>找到中间的IIS部分，打开“FastCGI设置”</p>\n<p>右键选中：C:\\php\\php-cgi.exe然后选择编辑<br><img src=\"/2018/04/29/IIS-php/2821.jpg\" title=\"很遗憾，不见了\"></p>\n<p>监视对文件所做的更改：C:\\php\\php.ini</p>\n<p>环境变量，点旁边的”…”</p>\n<p>点“添加”</p>\n<p>Name：PHP_FCGI_MAX_REQUESTS</p>\n<p>Value：1000</p>\n<p>确定</p>\n<p>确定</p>\n<p>双击左边“起始页”下面的计算机名称</p>\n<p>找到中间的IIS部分，打开“默认文档”</p>\n<p>点右边的“添加”</p>\n<p>名称：index.php</p>\n<p>确定</p>\n<p>可以看到默认文档中已经有了index.php</p>\n<p>选择右边操作下面“上移”选项，把index.php移到最上边</p>\n<p><strong>5、测试php程序是否正常运行</strong></p>\n<p>打开：</p>\n<p>###C:\\inetpub\\wwwroot</p>\n<p>新建一个index.php文件</p>\n<p>内容如下：</p>\n<p>&lt;?php</p>\n<p>phpinfo();</p>\n<p>?&gt;<br>原网址：<a href=\"http://www.jb51.net/article/59280.htm\" target=\"_blank\" rel=\"noopener\">http://www.jb51.net/article/59280.htm</a></p>\n<h2 id=\"下面还是说一下自己配置过程遇到的问题\"><a href=\"#下面还是说一下自己配置过程遇到的问题\" class=\"headerlink\" title=\"下面还是说一下自己配置过程遇到的问题\"></a><font color=\"blue\">下面还是说一下自己配置过程遇到的问题</font></h2><p>打开127.0.0.1/index.php</p>\n<p><font color=\"red\">404错误</font>:没有php文件</p>\n<p><font color=\"red\">500服务器内部错误</font>:看php-cgi.exe能否运行，可能是缺php5.dll文件。<br>也可能是配置ini文件过程出错，具体查看上面的教程<br>这次过程中最后遇到打开空白，原因是php内部没有信息</p>\n","categories":[],"tags":[]},{"title":"ajax总结","url":"http://minjin29.cn/archives/2018/04/26/ajax/","content":"<p><font face=\"微软雅黑\"></font></p>\n<h3 id=\"一、ajax简介\"><a href=\"#一、ajax简介\" class=\"headerlink\" title=\"一、ajax简介\"></a>一、ajax简介</h3><p>Ajax = Asynchronous JavaScript and XML （异步的JavaScript和XML），Ajax是一种用于创建快速动态网页的技术。Ajax最大的优点就是在不重新加载整个页面的情况下，可以与服务器交换数据并更新部分网页内容。 </p>\n<h3 id=\"二、ajax用法\"><a href=\"#二、ajax用法\" class=\"headerlink\" title=\"二、ajax用法\"></a>二、ajax用法</h3><h4 id=\"跨域\"><a href=\"#跨域\" class=\"headerlink\" title=\"跨域:\"></a><strong>跨域:</strong></h4><p>jquery方法封装：(jsonp跨域只能用于get请求，即使指定了post，也会变为get)</p>\n<p>后台php头文件需要添加   header(“Access-Control-Allow-Origin:*”); </p>\n<p>其中，*表示所有客户端，当然也可以指定</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 指定允许其他域名访问  </span><br><span class=\"line\">header(&apos;Access-Control-Allow-Origin:*&apos;);  </span><br><span class=\"line\">// 响应类型  </span><br><span class=\"line\">header(&apos;Access-Control-Allow-Methods:POST&apos;);  </span><br><span class=\"line\">// 响应头设置  </span><br><span class=\"line\">header(&apos;Access-Control-Allow-Headers:x-requested-with,content-type&apos;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    type:&quot;GET&quot;,</span><br><span class=\"line\">    url:&quot;http://www.deardull.com:9090/getMySeat&quot;, //访问的链接</span><br><span class=\"line\">    dataType:&quot;jsonp&quot;,  //数据格式设置为jsonp</span><br><span class=\"line\">    jsonp:&quot;callback&quot;,  //Jquery生成验证参数的名称</span><br><span class=\"line\">    success:function(data)&#123;  //成功的回调函数</span><br><span class=\"line\">        alert(data);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    error: function (e) &#123;</span><br><span class=\"line\">        alert(&quot;error&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    async : true,</span><br><span class=\"line\">    url : &quot;https://api.douban.com/v2/book/search&quot;,</span><br><span class=\"line\">    type : &quot;GET&quot;,</span><br><span class=\"line\">    dataType : &quot;jsonp&quot;, // 返回的数据类型，设置为JSONP方式</span><br><span class=\"line\">    jsonp : &apos;callback&apos;, //指定一个查询参数名称来覆盖默认的 jsonp 回调参数名 callback</span><br><span class=\"line\">    jsonpCallback: &apos;handleResponse&apos;, //设置回调函数名</span><br><span class=\"line\">    data : &#123;</span><br><span class=\"line\">        q : &quot;javascript&quot;,</span><br><span class=\"line\">        count : 1</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    success: function(response, status, xhr)&#123;</span><br><span class=\"line\">        console.log(&apos;状态为：&apos; + status + &apos;,状态是：&apos; + xhr.statusText);</span><br><span class=\"line\">        console.log(response);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"jsonp跨域的原理：\"><a href=\"#jsonp跨域的原理：\" class=\"headerlink\" title=\"jsonp跨域的原理：\"></a><strong>jsonp跨域的原理：</strong></h4><p>动态创建src属性，由于img、link、script的src获取数据不是跨域，因此可以进行数据传输</p>\n<h5 id=\"具体的跨域原理：\"><a href=\"#具体的跨域原理：\" class=\"headerlink\" title=\"具体的跨域原理：\"></a>具体的跨域原理：</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var script = document.createElement(&quot;script&quot;);</span><br><span class=\"line\">script.src = &quot;https://api.douban.com/v2/book/search?q=javascript&amp;count=1&amp;callback=handleResponse&quot;;</span><br><span class=\"line\">document.body.insertBefore(script, document.body.firstChild);</span><br></pre></td></tr></table></figure>\n<p>在页面中，将返回的JSON数据进行包装，类似：<br>callback({“name”:”hax”,”gender”:”Male”})<br>将其作为参数传入回调函数中，我们通过回调函数来来操作数据。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function handleResponse(response)&#123;</span><br><span class=\"line\">    // 对response数据进行操作代码</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>缺点：如果不确定请求的URL是否安全，最好不用这种方法，这种跨域的方法并不安全</p>\n<p>用post请求时，还需设置：</p>\n<p><strong>ajax.setRequestHeader(‘content-type’, “application/x-www-form-urlencoded”);</strong></p>\n<h4 id=\"html中的enctype属性\"><a href=\"#html中的enctype属性\" class=\"headerlink\" title=\"html中的enctype属性:\"></a>html中的enctype属性:</h4><p>enctype：规定了form表单在发送到服务器时候编码方式。他有如下的三个值。 </p>\n<ul>\n<li>application/x-www-form-urlencoded。默认的编码方式。但是在用文本的传输和MP3等大型文件的时候，使用这种编码就显得 效率低下。 </li>\n<li>multipart/form-data 。 指定传输数据为二进制类型，比如图片、mp3、文件。 </li>\n<li>text/plain。纯文体的传输。空格转换为 “+” 加号，但不对特殊字符编码。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(&#123;</span><br><span class=\"line\">    type: &quot;POST&quot;,</span><br><span class=\"line\">    url: &quot;test.php&quot;,</span><br><span class=\"line\">    data: &quot;name=garfield&amp;age=18&quot;,</span><br><span class=\"line\">    success: function(data)&#123;</span><br><span class=\"line\">        $(&quot;#myDiv&quot;).html(&apos;&lt;h2&gt;&apos;+data+&apos;&lt;/h2&gt;&apos;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"三、ajax请求过程：\"><a href=\"#三、ajax请求过程：\" class=\"headerlink\" title=\"三、ajax请求过程：\"></a><strong>三、ajax请求过程：</strong></h3><ol>\n<li><p>创建对象（xmlHttp)，判断是否为IE浏览器并给对象赋值</p>\n</li>\n<li><p>异步调用服务器数据</p>\n</li>\n<li><p>检查对象的onreadystatechange状态</p>\n</li>\n</ol>\n","categories":[],"tags":[]},{"title":"Bootstrap学习","url":"http://minjin29.cn/archives/2018/04/26/Bootstrap-1/","content":"<p><font color=\"green\">1. 默认表单</font><br>最基本的表单是垂直表单，如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form role=&quot;form&quot;&gt;</span><br><span class=\"line\">  &lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">    &lt;label for=&quot;name&quot;&gt;名称&lt;/label&gt;</span><br><span class=\"line\">    &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; placeholder=&quot;请输入名称&quot;&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">    &lt;label for=&quot;inputfile&quot;&gt;文件输入&lt;/label&gt;</span><br><span class=\"line\">    &lt;input type=&quot;file&quot; id=&quot;inputfile&quot;&gt;</span><br><span class=\"line\">    &lt;p class=&quot;help-block&quot;&gt;这里是块级帮助文本的实例。&lt;/p&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">    &lt;label&gt;</span><br><span class=\"line\">      &lt;input type=&quot;checkbox&quot;&gt;请打勾</span><br><span class=\"line\">    &lt;/label&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;提交&lt;/button&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>\n<p>form-control:换行+填充整行<br>form-group使得与下面的元素保持最好的间距，由于用md编辑，实测只能在浏览器看到：</p>\n<p><form role=\"form\"><br>  <div class=\"form-group\"><br>    <label for=\"name\">名称</label><br>    <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"请输入名称\"><br>  </div><div class=\"form-group\"><label for=\"inputfile\">文件输入</label><br>    <input type=\"file\" id=\"inputfile\"><p class=\"help-block\">这里是块级帮助文本的实例。</p></div><div class=\"checkbox\"><label> <input type=\"checkbox\">请打勾</label><br>  </div><button type=\"submit\" class=\"btn btn-default\">提交</button><br></form></p>\n<p><font color=\"red\">2. 内联表单</font><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form class=&quot;form-inline&quot; role=&quot;form&quot;&gt;</span><br><span class=\"line\">  &lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">    &lt;label class=&quot;sr-only&quot; for=&quot;name&quot;&gt;名称&lt;/label&gt;</span><br><span class=\"line\">    &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;name&quot; placeholder=&quot;请输入名称&quot;&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">    &lt;label class=&quot;sr-only&quot; for=&quot;inputfile&quot;&gt;文件输入&lt;/label&gt;</span><br><span class=\"line\">    &lt;input type=&quot;file&quot; id=&quot;inputfile&quot;&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;checkbox&quot;&gt;</span><br><span class=\"line\">    &lt;label&gt;</span><br><span class=\"line\">      &lt;input type=&quot;checkbox&quot;&gt;请打勾</span><br><span class=\"line\">    &lt;/label&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;button type=&quot;submit&quot; class=&quot;btn btn-default&quot;&gt;提交&lt;/button&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>\n<p>与普通form相比，多了form-inline以及label加了sr-only的class，这个class是指screen read only，为了增强可访问性，为残障人士设计，正常并不显示</p>\n<p>3.label-control以及form-control-static<br>label-control为右对齐<br>当需要在一个水平表单内的表单标签后放置纯文本时，在 </p><p> 上使用 class .form-control-static。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;form class=&quot;form-horizontal&quot; role=&quot;form&quot;&gt;</span><br><span class=\"line\">  &lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">    &lt;label class=&quot;col-sm-2 control-label&quot;&gt;Email&lt;/label&gt;</span><br><span class=\"line\">    &lt;div class=&quot;col-sm-10&quot;&gt;</span><br><span class=\"line\">      &lt;p class=&quot;form-control-static&quot;&gt;email@example.com&lt;/p&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  &lt;div class=&quot;form-group&quot;&gt;</span><br><span class=\"line\">    &lt;label for=&quot;inputPassword&quot; class=&quot;col-sm-2 control-label&quot;&gt;密码&lt;/label&gt;</span><br><span class=\"line\">    &lt;div class=&quot;col-sm-10&quot;&gt;</span><br><span class=\"line\">      &lt;input type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;inputPassword&quot; placeholder=&quot;请输入密码&quot;&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>\n<p>##<font color=\"blue\">其他class</font><br>focuseInput：聚焦<br>disabledInput：禁用输入（其实都只加入disabled就能禁用）<br>disabledSelect：禁止选择</p>\n<h3 id=\"表单控件大小\"><a href=\"#表单控件大小\" class=\"headerlink\" title=\"表单控件大小\"></a>表单控件大小</h3><p>input-lg：<br>input-sm<br>.col-lg-2</p>\n<h6 id=\"帮助文本：help-block\"><a href=\"#帮助文本：help-block\" class=\"headerlink\" title=\"帮助文本：help-block\"></a>帮助文本：help-block</h6>","categories":[],"tags":["tag1"]},{"title":"","url":"http://minjin29.cn/archives/css/personal_style.css","content":"/*\nhtml.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-image: url('/images/night-code.jpg');\n  background-color: transparent;\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}\n*/","categories":[],"tags":[]},{"title":"about","url":"http://minjin29.cn/archives/about/index.html","content":"<p>about:</p>\n<ul>\n<li>type: me<br>icon: icon-user<br>text_value:<ul>\n<li>“lmj，1991，Spring.”</li>\n<li>“热爱前端.”</li>\n<li>“立志做一名前端开发工程师，常用 HTML / CSS / JavaScript.”</li>\n</ul>\n</li>\n<li>type: Github<br>icon: icon-github<br>text_key: Github<br>text_value: “@forsigner”<br>text_value_url: <a href=\"https://github.com/yndtemps\" target=\"_blank\" rel=\"noopener\">https://github.com/yndtemps</a></li>\n<li>type: weibo<br>icon: icon-weibo<br>text_key: 微博<br>text_value: “@forsigner”<br>text_value_url: <a href=\"http://weibo.com/u/1847075964\" target=\"_blank\" rel=\"noopener\">http://weibo.com/u/1847075964</a></li>\n<li>type: mail<br>icon: icon-mail<br>text_key: Gmail<br>text_value: “<a href=\"mailto:forsigner@gmail.com\" target=\"_blank\" rel=\"noopener\">forsigner@gmail.com</a>“</li>\n<li>type: location<br>icon: icon-location<br>text_value: 珠海</li>\n</ul>\n","categories":[],"tags":[]},{"title":"categories","url":"http://minjin29.cn/archives/categories/index.html","content":"","categories":[],"tags":[]},{"title":"tags","url":"http://minjin29.cn/archives/tags/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://minjin29.cn/archives/link/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://minjin29.cn/archives/search/index.html","content":"","categories":[],"tags":[]}]